/**
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* The complete address of the Sender.
*/
export class FromAddressV2 {
    /**
    * The name of the Sender to which this address points.<br /> `Max length = 30`.
    */
    'name': string;
    /**
    * The addressLine1 contains the Flat number, Building or Apartment Name/number (if any) or company name (if not residential) of the Sender. <br /> `Max length = 35`.
    */
    'addressLine1': string;
    /**
    * The name of the city or town the Sender\'s address belongs to. <br /> `Max length = 30`.
    */
    'cityTown': string;
    /**
    * The name of the State or Province the Sender belongs to. It is the `2-letter` State or Province Code for US or Canadian address(es). <br /> Below is the hyperlink for CA country that will navigate to its Province/State Codes page. Similarly, respective country users can check for their country- State/Province codes. <br /> Please switch to the `Search` tab, select `Country codes` radio button, enter the required country name or country code, and then click `SEARCH` button. <br /> `Max length = 2`
    */
    'stateProvince': string;
    /**
    * The Postal Code or ZIP Code of the address. <br /> For CA addresses, use a `six-character` alphanumeric string Postal Code in this format: \'A1A 1A1\'. <br /> While for US addresses, use either the `5-digit` or `9-digit` ZIP Code in one of the following formats: \'12345\' or \'12345-6789\'. <br /> `Max length = 10`
    */
    'postalCode': string;
    /**
    * The country in which the sender\'s address is located. The value will be the two-character ISO Code of the country from the ISO country list. <br /> Use ISO 3166-1 Alpha-2 standard values. For best results this should be included, especially if the country name does not appear in any of the unparsedAddressLines. <br /> Below is the hyperlink, please select `Country codes` and then click `SEARCH` button. <br /> `Max length = 2`
    */
    'countryCode': string;
    /**
    * The name of the company, in case if the sender address is not residential. <br /> `Max length = 30`.
    */
    'company'?: string;
    /**
    * This is sender\'s phone number. Enter the digits with or without spaces or hyphens. <br /> `Max length = 15`.
    */
    'phone': string;
    /**
    * This must be sender\'s valid email. Email is required if the customer is using GoFor Carrier. <br /> `Max length = 30` 
    */
    'email'?: string;
    /**
    * The specified address can be Residential or Official. In case if the address is Residential, the boolean value will be \'true\', else it will take \'false\'.
    */
    'residential'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "addressLine1",
            "baseName": "addressLine1",
            "type": "string",
            "format": ""
        },
        {
            "name": "cityTown",
            "baseName": "cityTown",
            "type": "string",
            "format": ""
        },
        {
            "name": "stateProvince",
            "baseName": "stateProvince",
            "type": "string",
            "format": ""
        },
        {
            "name": "postalCode",
            "baseName": "postalCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "company",
            "baseName": "company",
            "type": "string",
            "format": ""
        },
        {
            "name": "phone",
            "baseName": "phone",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "residential",
            "baseName": "residential",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FromAddressV2.attributeTypeMap;
    }

    public constructor() {
    }
}

